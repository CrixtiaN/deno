#V2
Deno.get('PORT')
Deno.env.get('PORT')
Deno.env.get('PWD')
Number(void 0)
Number()
db = Deno.env.get('REPLIT_DB_URL')
let db = Deno.env.get('REPLIT_DB_URL')
db
await fetch(db, {method: 'GET'}).then(r=>r.text())
let db = Deno.env.get('REPLIT_DB_URL')
await fetch(db, {method: 'GET'}).then(r=>r.text())
await fetch(`${db}?prefix=a`, {method: 'GET'}).then(r=>r.text())
await fetch(`${db}`, {method_: 'GET', body: 'b=2'}).then(r=>r.text())
await fetch(`${db}?prefix=b`, {method: 'GET'}).then(r=>r.text())
Form
await fetch(`${db}/a`, {method: 'GET'}).then(r=>r.text())
await fetch(`${db}/b`, {method: 'GET'}).then(r=>r.text())
await fetch(`${db}/c`, {method: 'GET'}).then(r=>r.text())
const {default: rdb} = await import('./replitDB.js')
rdb
rdb.get('a')
await rdb.get('a')
await rdb.get('b')
await rdb.get('c')
await rdb.set('b',2)
await rdb.get('b')
await rdb.delete('a')
await rdb.get('b')
await rdb.get('a')
await rdb.delete('b')
await rdb.get('a')
await rdb.get('b')
await rdb.get('c')
const {default: rdb} = await import('./replitDB.js')
const {default: rdb1} = await import('./replitDB.js?r='+Date.now())
await rdb1
await rdb1.get('a')
await rdb1.get('b')
await rdb1.get('c')
await rdb1.get('aa')
await rdb1.get('a')
await rdb1.get('b')
await rdb1.set('a',2)
await rdb1.delete('a')
await rdb1.set('a',2)
await rdb1.delete('a')
const {default: rdb} = await import('./replitDB.js?r='+Date.now())
rdb.get('a',1)
await rdb.get('a',1)
await rdb.set('a',1)
const {default: rdb1} = await import('./replitDB.js?r='+Date.now())
await rdb1.get('a',1)
await rdb1.set('a',0)
await rdb1.delete('a')
await rdb1.delete('b')
await rdb1.delete('c')
await rdb1.delete('d')
await rdb1.set('boot', new Date().toLocaleString('es-ve', {timeZone: 'America/Caracas'}))
await rdb1.get('boot')
Deno.signal(Deno.Signal.SIGTERM)
Deno.env.get('')
Deno.env.set('AAA','111')
Deno.env.get('AAA')
Deno.run({cmd: ['source', '.bash_profile']})
Deno.run({cmd: ['car', '.bash_profile']})
Deno.run({cmd: ['cat', '.bash_profile']})
Deno.run({cmd: ['source', '.bash_profile']})
let a: string = 1
String(void 0)
[1,2,3].slice(2)
[1,2,3].slice(0,2)
